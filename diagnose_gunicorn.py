#!/usr/bin/env python3
"""
–î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–±–ª–µ–º —Å gunicorn.
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º.
"""

import os
import sys
import traceback
from pathlib import Path

def check_python_path():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ Python path."""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Python path...")
    print(f"Python –≤–µ—Ä—Å–∏—è: {sys.version}")
    print(f"Python executable: {sys.executable}")
    print(f"Current working directory: {os.getcwd()}")
    print(f"Python path: {sys.path[:3]}...")
    print()

def check_environment():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è."""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è...")
    env_vars = ['FLASK_ENV', 'FLASK_APP', 'DATABASE_URL', 'SECRET_KEY']
    for var in env_vars:
        value = os.getenv(var, '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–ê')
        if var == 'SECRET_KEY' and value != '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–ê':
            value = '***–°–ö–†–´–¢–û***'
        print(f"{var}: {value}")
    print()

def check_basic_imports():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑–æ–≤—ã—Ö –∏–º–ø–æ—Ä—Ç–æ–≤."""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑–æ–≤—ã—Ö –∏–º–ø–æ—Ä—Ç–æ–≤...")
    
    basic_modules = [
        'flask', 'loguru', 'sqlalchemy', 'flask_migrate', 
        'flask_jwt_extended', 'dotenv'
    ]
    
    for module in basic_modules:
        try:
            __import__(module)
            print(f"‚úÖ {module}")
        except ImportError as e:
            print(f"‚ùå {module}: {e}")
    print()

def check_app_structure():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è."""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...")
    
    required_files = [
        'app/__init__.py',
        'app/config/__init__.py',
        'app/config/logging.py',
        'app/utils/__init__.py',
        'app/utils/logging.py',
        'app/models/__init__.py',
        'app/routes/__init__.py',
        'run.py'
    ]
    
    for file_path in required_files:
        if Path(file_path).exists():
            print(f"‚úÖ {file_path}")
        else:
            print(f"‚ùå {file_path} - –ù–ï –ù–ê–ô–î–ï–ù")
    print()

def check_app_imports():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è."""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...")
    
    try:
        print("–ò–º–ø–æ—Ä—Ç app.config.logging...")
        from app.config.logging import get_logging_config
        print("‚úÖ app.config.logging –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
        
        config = get_logging_config('production')
        print(f"‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∞: {config}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ app.config.logging: {e}")
        traceback.print_exc()
    
    try:
        print("–ò–º–ø–æ—Ä—Ç app.utils.logging...")
        from app.utils.logging import setup_logging
        print("‚úÖ app.utils.logging –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ app.utils.logging: {e}")
        traceback.print_exc()
    
    try:
        print("–ò–º–ø–æ—Ä—Ç app...")
        from app import create_app
        print("‚úÖ app –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ app: {e}")
        traceback.print_exc()
    
    print()

def check_app_creation():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è."""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...")
    
    try:
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
        os.environ['FLASK_ENV'] = 'production'
        
        print("–ò–º–ø–æ—Ä—Ç create_app...")
        from app import create_app
        
        print("–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...")
        app = create_app('production')
        
        print(f"‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ: {app}")
        print(f"‚úÖ –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: {app.name}")
        print(f"‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: {app.config.get('ENV', '–ù–ï –û–ü–†–ï–î–ï–õ–ï–ù–ê')}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: {e}")
        traceback.print_exc()
        return False

def check_gunicorn_compatibility():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å gunicorn."""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å gunicorn...")
    
    try:
        import gunicorn
        print(f"‚úÖ Gunicorn —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {gunicorn.__version__}")
        
        # –ü—Ä–æ–≤–µ—Ä–∏–º —á—Ç–æ run.py —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–∞–∫ –º–æ–¥—É–ª—å
        print("–ü—Ä–æ–≤–µ—Ä–∫–∞ run:app...")
        import run
        app = getattr(run, 'app', None)
        if app:
            print("‚úÖ run:app –¥–æ—Å—Ç—É–ø–µ–Ω")
        else:
            print("‚ùå run:app –ù–ï –Ω–∞–π–¥–µ–Ω")
            
    except ImportError:
        print("‚ùå Gunicorn –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ gunicorn: {e}")
        traceback.print_exc()
    print()

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏."""
    print("=" * 60)
    print("ü©∫ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ü–†–û–ë–õ–ï–ú –° GUNICORN")
    print("=" * 60)
    print()
    
    check_python_path()
    check_environment()
    check_basic_imports()
    check_app_structure()
    check_app_imports()
    
    if check_app_creation():
        print("‚úÖ –ë–∞–∑–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–π–¥–µ–Ω–∞!")
    else:
        print("‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ - –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–æ–∑–¥–∞–Ω–æ!")
        return False
    
    check_gunicorn_compatibility()
    
    print("=" * 60)
    print("üéØ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
    print("1. –ï—Å–ª–∏ –µ—Å—Ç—å –æ—à–∏–±–∫–∏ –∏–º–ø–æ—Ä—Ç–∞ - –∏—Å–ø—Ä–∞–≤—å—Ç–µ –∏—Ö")
    print("2. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ FLASK_ENV=production")
    print("3. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å: python3 diagnose_gunicorn.py")
    print("4. –ó–∞—Ç–µ–º: gunicorn --bind 127.0.0.1:8000 run:app")
    print("=" * 60)
    
    return True

if __name__ == '__main__':
    try:
        main()
    except KeyboardInterrupt:
        print("\nüõë –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"\nüí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏: {e}")
        traceback.print_exc() 